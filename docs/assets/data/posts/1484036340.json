{"title":"Singleton.sh","body":"\u003cp\u003eToday, I had to solve a problem involving a cron script whose schedule was overlapping and causing multiple processes of the same script to run which was causing issues in this case (unwanted duplicate processing).\u003c!--more--\u003e\u003c/p\u003e\n\u003cp\u003eOne way I could fix this was to modify the script to ensure that multiple processes can run without causing issues but I did not have access to the script's code.\u003c/p\u003e\n\u003cp\u003eSo I wrote a  proxy bash script which ensures that only one process of a command is running at any one time. I called this \"singleton.sh\". What the system does is very simple. It takes 2 arguments, the first is the command you wish to run and the second is the pid file you wish to use to keep track of the process. The script simply checks to see if the pid in the pid file is still running and only starts another process if the pid is no longer running.\u003c/p\u003e\n\u003cp\u003eSee code below:\u003c/p\u003e\n\u003cp\u003esingleton.sh\u003c/p\u003e\n\u003cpre\u003e[code lang=bash]\n#Singleton is a proxy script that ensures that only one instace of a command is running at any point in time\n\n#Perfect for protecting cron jobs that whose schedule often overlap\n\nif [ $# -eq 0 ]\nthen\necho \"No arguments supplied.\"\necho \"SYNTAX: singleton.sh [CMD] [PIDFILE]\"\nexit\nfi\n\nif [ $# -eq 1 ]\nthen\necho \"Missing second argument: No pid file provided\"\necho \"SYNTAX: singleton.sh [CMD] [PIDFILE]\"\nexit\nfi\n\n#get first 2 arguments passed to me - ignore the rest\nCOMMAND=$1\nPID_FILE=$2\nRUN=false\n\necho \"COMMAND: $COMMAND\"\necho \"PID FILE: $PID_FILE\";\n\n#check for pid file\nif [ -f $PID_FILE ];\nthen\n#pid file exists, check if pid is still running,\nPID=$(cat $PID_FILE)\nif [ -e /proc/$PID ];\nthen\n#if running - do nothing, exit\necho \"$PID is running\"\nelse\nRUN=true\nfi\nelse\nRUN=true\nfi\n\nif $RUN -eq \"true\";\nthen\necho \"Running '$COMMAND'\"\n$COMMAND \u0026amp;amp; echo $! \u0026amp;gt; $PID_FILE\nfi\n\n[/code]\u003c/pre\u003e"}